import React, { useState, useRef, useEffect } from "react";
const App = () => {
  const [theme, setTheme] = useState(true);
  const [terminal, setTerminal] = useState(false);
  const [about, setAbout] = useState(false);
  const [start, setStart] = useState(true);
  const [zIndexxx, setZindexxx] = useState(6);
  const [device, setDevice] = useState(false);
  const [projects, setProjects] = useState(false);
  const [active, setActive] = useState(true);

  const videoEl = useRef(null);

  const attemptPlay = () => {
    videoEl &&
      videoEl.current &&
      videoEl.current.play().catch((error) => {
        console.error("Error attempting to play", error);
      });
  };


      <div className="navbar">
        <div
          className="nav-heading"
        >
          <img id="logo" alt="logo" src={theme ? logo_white : logo_black} />

          <p>
            Kisim
            <ToggleButton onChange={onPress} />
            {theme ? "ff" : "n"}
            &nbsp;OS
          </p>
        </div>
        
        </div>
        <div className="nav-socials">
          <a href="https://www.linkedin.com/in/valentin-kisimov-2719b41a1/">
            <SlSocialLinkedin className="nav-social-svg" />
          </a>
          <a href="https://github.com/vtwenty3">
            <VscGithubAlt className="nav-social-svg" />
            
          </a>
        </div>
      </div>

      <div className="icons">
        

        <Icon
          icon={BsTerminal}
          caption="Terminal2"
          elementId="terminal2"
          setVisibility={setTerminal2}
          zIndexxx={zIndexxx}
          visibility={terminal2}
          setZindexxx={setZindexxx}
        />
        <Icon
          icon={BsPersonCircle}
          caption="About"
          elementId="about"
          setVisibility={setAbout}
          visibility={about}
          zIndexxx={zIndexxx}
          setZindexxx={setZindexxx}
        />
        <Icon
          icon={TbDeviceDesktopAnalytics}
          caption="Device"
          elementId="deviceInfo"
          setVisibility={setDevice}
          zIndexxx={zIndexxx}
          visibility={device}
          setZindexxx={setZindexxx}
        />
        <Icon
          icon={BsJournalCode}
          caption="Projects"
          elementId="projects"
          setVisibility={setProjects}
          zIndexxx={zIndexxx}
          visibility={projects}
          setZindexxx={setZindexxx}
        />
        <div className="hoverIcon">
          <a
            className="iconWrapper"
            href={resumePdf}
            download="valentin-kisimov-resume.pdf"
          >
            <VscFilePdf className="icon" />
            <span
              className="caption"
              style={theme ? { color: "white" } : { color: "black" }}
            >
              
              Resume
            </span>
          </a>
        </div>
      </div>
      {terminal ? (
        <Terminal
          theme={themeVars}
          setTheme={setTheme}
          setVisibility={setTerminal}
          alabala={setProjects}
          zIndexxx={zIndexxx}
          setZindexxx={setZindexxx}
          elementId="terminal"
        />
      ) : null}
      {terminal2 ? (
        <Terminal2
          theme={themeVars}
          setTheme={setTheme}
          setVisibility={setTerminal2}
          zIndexxx={zIndexxx}
          setZindexxx={setZindexxx}
          elementId="terminal2"
        />
      ) : null}
      {about ? (
        <About
          theme={themeVars}
          setTheme={setTheme}
          setVisibility={setAbout}
          zIndexxx={zIndexxx}
          setZindexxx={setZindexxx}
        />
      ) : null}
      {projects ? (
        <Projects
          theme={themeVars}
          setTheme={setTheme}
          setVisibility={setProjects}
          zIndexxx={zIndexxx}
          setZindexxx={setZindexxx}
        />
      ) : null}
      {device ? (
        <DeviceInfo
          theme={themeVars}
          setTheme={setTheme}
          setVisibility={setDevice}
          zIndexxx={zIndexxx}
          setZindexxx={setZindexxx}
        />
      ) : null}

      {start ? (
        <Start theme={themeVars} setTheme={setTheme} setVisibility={setStart} />
      ) : null}
    </div>
  );
};

export default App;


